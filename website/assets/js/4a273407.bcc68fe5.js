"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1484],{9680:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var a=t(5893),i=t(1151);const s={id:"requiredannotations",title:"Required Annotations"},o="Required Annotations",r={id:"validation/requiredannotations",title:"Required Annotations",description:"Description",source:"@site/docs/validation/requiredannotations.md",sourceDirName:"validation",slug:"/validation/requiredannotations",permalink:"/gatekeeper-library/website/validation/requiredannotations",draft:!1,unlisted:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/validation/requiredannotations.md",tags:[],version:"current",frontMatter:{id:"requiredannotations",title:"Required Annotations"},sidebar:"docs",previous:{title:"Replica Limits",permalink:"/gatekeeper-library/website/validation/replicalimits"},next:{title:"Required Labels",permalink:"/gatekeeper-library/website/validation/requiredlabels"}},l={},d=[{value:"Description",id:"description",level:2},{value:"Template",id:"template",level:2},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"required-annotations",children:"Required Annotations"}),"\n",(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(n.p,{children:"Requires resources to contain specified annotations, with values matching provided regular expressions."}),"\n",(0,a.jsx)(n.h2,{id:"template",children:"Template"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8srequiredannotations\n  annotations:\n    metadata.gatekeeper.sh/title: "Required Annotations"\n    metadata.gatekeeper.sh/version: 1.0.1\n    description: >-\n      Requires resources to contain specified annotations, with values matching\n      provided regular expressions.\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sRequiredAnnotations\n      validation:\n        openAPIV3Schema:\n          type: object\n          properties:\n            message:\n              type: string\n            annotations:\n              type: array\n              description: >-\n                A list of annotations and values the object must specify.\n              items:\n                type: object\n                properties:\n                  key:\n                    type: string\n                    description: >-\n                      The required annotation.\n                  allowedRegex:\n                    type: string\n                    description: >-\n                      If specified, a regular expression the annotation\'s value\n                      must match. The value must contain at least one match for\n                      the regular expression.\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8srequiredannotations\n\n        violation[{"msg": msg, "details": {"missing_annotations": missing}}] {\n            provided := {annotation | input.review.object.metadata.annotations[annotation]}\n            required := {annotation | annotation := input.parameters.annotations[_].key}\n            missing := required - provided\n            count(missing) > 0\n            msg := sprintf("you must provide annotation(s): %v", [missing])\n        }\n\n        violation[{"msg": msg}] {\n          value := input.review.object.metadata.annotations[key]\n          expected := input.parameters.annotations[_]\n          expected.key == key\n          expected.allowedRegex != ""\n          not regex.match(expected.allowedRegex, value)\n          msg := sprintf("Annotation <%v: %v> does not satisfy allowed regex: %v", [key, value, expected.allowedRegex])\n        }\n\n'})}),"\n",(0,a.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/requiredannotations/template.yaml\n"})}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"must-have-set-of-annotations"}),(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"constraint"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sRequiredAnnotations\nmetadata:\n  name: all-must-have-certain-set-of-annotations\nspec:\n  match:\n    kinds:\n      - apiGroups: [""]\n        kinds: ["Service"]\n  parameters:\n    message: "All services must have a `a8r.io/owner` and `a8r.io/runbook` annotations."\n    annotations:\n      - key: a8r.io/owner\n        # Matches email address or github user\n        allowedRegex: ^([A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,6}|[a-z]{1,39})$\n      - key: a8r.io/runbook\n        # Matches urls including or not http/https\n        allowedRegex: ^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\n\n'})}),(0,a.jsx)(n.p,{children:"Usage"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/requiredannotations/samples/all-must-have-certain-set-of-annotations/constraint.yaml\n"})})]}),(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"example-allowed"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Service\nmetadata:\n  name: allowed-service\n  annotations:\n    a8r.io/owner: "dev-team-alfa@contoso.com"\n    a8r.io/runbook: "https://confluence.contoso.com/dev-team-alfa/runbooks"\nspec:\n  ports:\n  - name: http\n    port: 80\n    targetPort: 8080\n  selector:\n    app: foo\n\n'})}),(0,a.jsx)(n.p,{children:"Usage"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/requiredannotations/samples/all-must-have-certain-set-of-annotations/example_allowed.yaml\n"})})]}),(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"example-disallowed"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: disallowed-service\nspec:\n  ports:\n  - name: http\n    port: 80\n    targetPort: 8080\n  selector:\n    app: foo\n\n"})}),(0,a.jsx)(n.p,{children:"Usage"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/requiredannotations/samples/all-must-have-certain-set-of-annotations/example_disallowed.yaml\n"})})]})]})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>o});var a=t(7294);const i={},s=a.createContext(i);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);