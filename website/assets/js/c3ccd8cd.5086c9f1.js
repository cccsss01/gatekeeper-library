"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8510],{8004:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var t=n(5893),i=n(1151);const s={id:"allow-privilege-escalation",title:"allow-privilege-escalation"},l="allow-privilege-escalation",o={id:"mutation-examples/allow-privilege-escalation",title:"allow-privilege-escalation",description:"Usage",source:"@site/docs/mutation-examples/allow-privilege-escalation.md",sourceDirName:"mutation-examples",slug:"/mutation-examples/allow-privilege-escalation",permalink:"/gatekeeper-library/website/mutation-examples/allow-privilege-escalation",draft:!1,unlisted:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/mutation-examples/allow-privilege-escalation.md",tags:[],version:"current",frontMatter:{id:"allow-privilege-escalation",title:"allow-privilege-escalation"},sidebar:"docs",previous:{title:"Volume Types",permalink:"/gatekeeper-library/website/validation/volumes"},next:{title:"capabilities",permalink:"/gatekeeper-library/website/mutation-examples/capabilities"}},r={},p=[{value:"Usage",id:"usage",level:3},{value:"Mutation Examples",id:"mutation-examples",level:2}];function c(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"allow-privilege-escalation",children:"allow-privilege-escalation"}),"\n",(0,t.jsx)(a.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/mutation/pod-security-policy/allow-privilege-escalation/samples/mutation.yaml\n"})}),"\n",(0,t.jsx)(a.h2,{id:"mutation-examples",children:"Mutation Examples"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-yaml",children:'apiVersion: mutations.gatekeeper.sh/v1\nkind: Assign\nmetadata:\n  name: k8spspdefaultallowprivilegeescalation\nspec:\n  applyTo:\n  - groups: [""]\n    kinds: ["Pod"]\n    versions: ["v1"]\n  location: "spec.containers[name:*].securityContext.allowPrivilegeEscalation"\n  parameters:\n    pathTests:\n    - subPath: "spec.containers[name:*].securityContext.allowPrivilegeEscalation"\n      condition: MustNotExist\n    assign:\n      value: false\n---\napiVersion: mutations.gatekeeper.sh/v1\nkind: Assign\nmetadata:\n  name: k8spspdefaultallowprivilegeescalation-init\nspec:\n  applyTo:\n  - groups: [""]\n    kinds: ["Pod"]\n    versions: ["v1"]\n  location: "spec.initContainers[name:*].securityContext.allowPrivilegeEscalation"\n  parameters:\n    pathTests:\n    - subPath: "spec.initContainers[name:*].securityContext.allowPrivilegeEscalation"\n      condition: MustNotExist\n    assign:\n      value: false\n---\napiVersion: mutations.gatekeeper.sh/v1\nkind: Assign\nmetadata:\n  name: k8spspdefaultallowprivilegeescalation-ephemeral\nspec:\n  applyTo:\n  - groups: [""]\n    kinds: ["Pod"]\n    versions: ["v1"]\n  location: "spec.ephemeralContainers[name:*].securityContext.allowPrivilegeEscalation"\n  parameters:\n    pathTests:\n    - subPath: "spec.ephemeralContainers[name:*].securityContext.allowPrivilegeEscalation"\n      condition: MustNotExist\n    assign:\n      value: false\n\n'})})]})}function u(e={}){const{wrapper:a}={...(0,i.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,a,n)=>{n.d(a,{Z:()=>o,a:()=>l});var t=n(7294);const i={},s=t.createContext(i);function l(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);