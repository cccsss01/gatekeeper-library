"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[214],{5797:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var t=r(5893),s=r(1151);const a={id:"requiredprobes",title:"Required Probes"},i="Required Probes",o={id:"validation/requiredprobes",title:"Required Probes",description:"Description",source:"@site/docs/validation/requiredprobes.md",sourceDirName:"validation",slug:"/validation/requiredprobes",permalink:"/gatekeeper-library/website/validation/requiredprobes",draft:!1,unlisted:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/validation/requiredprobes.md",tags:[],version:"current",frontMatter:{id:"requiredprobes",title:"Required Probes"},sidebar:"docs",previous:{title:"Required Labels",permalink:"/gatekeeper-library/website/validation/requiredlabels"},next:{title:"Storage Class",permalink:"/gatekeeper-library/website/validation/storageclass"}},p={},l=[{value:"Description",id:"description",level:2},{value:"Template",id:"template",level:2},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"required-probes",children:"Required Probes"}),"\n",(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"Requires Pods to have readiness and/or liveness probes."}),"\n",(0,t.jsx)(n.h2,{id:"template",children:"Template"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8srequiredprobes\n  annotations:\n    metadata.gatekeeper.sh/title: "Required Probes"\n    metadata.gatekeeper.sh/version: 1.0.1\n    description: Requires Pods to have readiness and/or liveness probes.\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sRequiredProbes\n      validation:\n        openAPIV3Schema:\n          type: object\n          properties:\n            probes:\n              description: "A list of probes that are required (ex: `readinessProbe`)"\n              type: array\n              items:\n                type: string\n            probeTypes:\n              description: "The probe must define a field listed in `probeType` in order to satisfy the constraint (ex. `tcpSocket` satisfies `[\'tcpSocket\', \'exec\']`)"\n              type: array\n              items:\n                type: string\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8srequiredprobes\n\n        import data.lib.exclude_update.is_update\n\n        probe_type_set = probe_types {\n            probe_types := {type | type := input.parameters.probeTypes[_]}\n        }\n\n        violation[{"msg": msg}] {\n            # Probe fields are immutable.\n            not is_update(input.review)\n\n            container := input.review.object.spec.containers[_]\n            probe := input.parameters.probes[_]\n            probe_is_missing(container, probe)\n            msg := get_violation_message(container, input.review, probe)\n        }\n\n        probe_is_missing(ctr, probe) = true {\n            not ctr[probe]\n        }\n\n        probe_is_missing(ctr, probe) = true {\n            probe_field_empty(ctr, probe)\n        }\n\n        probe_field_empty(ctr, probe) = true {\n            probe_fields := {field | ctr[probe][field]}\n            diff_fields := probe_type_set - probe_fields\n            count(diff_fields) == count(probe_type_set)\n        }\n\n        get_violation_message(container, review, probe) = msg {\n            msg := sprintf("Container <%v> in your <%v> <%v> has no <%v>", [container.name, review.kind.kind, review.object.metadata.name, probe])\n        }\n      libs:\n        - |\n          package lib.exclude_update\n\n          is_update(review) {\n              review.operation == "UPDATE"\n          }\n\n'})}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/requiredprobes/template.yaml\n"})}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"required-probes"}),(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"constraint"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sRequiredProbes\nmetadata:\n  name: must-have-probes\nspec:\n  match:\n    kinds:\n      - apiGroups: [""]\n        kinds: ["Pod"]\n  parameters:\n    probes: ["readinessProbe", "livenessProbe"]\n    probeTypes: ["tcpSocket", "httpGet", "exec"]\n\n'})}),(0,t.jsx)(n.p,{children:"Usage"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/requiredprobes/samples/must-have-probes/constraint.yaml\n"})})]}),(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"example-allowed"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: test-pod1\nspec:\n  containers:\n  - name: tomcat\n    image: tomcat\n    ports:\n    - containerPort: 8080\n    livenessProbe:\n      tcpSocket:\n        port: 80\n      initialDelaySeconds: 5\n      periodSeconds: 10\n    readinessProbe:\n      tcpSocket:\n        port: 8080\n      initialDelaySeconds: 5\n      periodSeconds: 10\n  volumes:\n  - name: cache-volume\n    emptyDir: {}\n\n"})}),(0,t.jsx)(n.p,{children:"Usage"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/requiredprobes/samples/must-have-probes/example_allowed.yaml\n"})})]}),(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"example-disallowed"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: test-pod1\nspec:\n  containers:\n  - name: nginx-1\n    image: nginx:1.7.9\n    ports:\n    - containerPort: 80\n    livenessProbe:\n      # tcpSocket:\n      #   port: 80\n      # initialDelaySeconds: 5\n      # periodSeconds: 10\n    volumeMounts:\n    - mountPath: /tmp/cache\n      name: cache-volume\n  - name: tomcat\n    image: tomcat\n    ports:\n    - containerPort: 8080\n    readinessProbe:\n      tcpSocket:\n        port: 8080\n      initialDelaySeconds: 5\n      periodSeconds: 10\n  volumes:\n  - name: cache-volume\n    emptyDir: {}\n\n"})}),(0,t.jsx)(n.p,{children:"Usage"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/requiredprobes/samples/must-have-probes/example_disallowed.yaml\n"})})]}),(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"example-disallowed2"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: test-pod2\nspec:\n  containers:\n  - name: nginx-1\n    image: nginx:1.7.9\n    ports:\n    - containerPort: 80\n    readinessProbe:\n    # httpGet:\n    #   path: /\n    #   port: 80\n    # initialDelaySeconds: 5\n    # periodSeconds: 10\n    livenessProbe:\n      tcpSocket:\n        port: 80\n      initialDelaySeconds: 5\n      periodSeconds: 10\n    volumeMounts:\n    - mountPath: /tmp/cache\n      name: cache-volume\n  - name: tomcat\n    image: tomcat\n    ports:\n    - containerPort: 8080\n    readinessProbe:\n      tcpSocket:\n        port: 8080\n      initialDelaySeconds: 5\n      periodSeconds: 10\n    # livenessProbe:\n    #   tcpSocket:\n    #     port: 8080\n    #   initialDelaySeconds: 5\n    #   periodSeconds: 10\n  volumes:\n  - name: cache-volume\n    emptyDir: {}\n\n"})}),(0,t.jsx)(n.p,{children:"Usage"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/requiredprobes/samples/must-have-probes/example_disallowed2.yaml\n"})})]})]})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>i});var t=r(7294);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);