"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3142],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(r),y=o,d=m["".concat(l,".").concat(y)]||m[y]||u[y]||a;return r?n.createElement(d,s(s({ref:t},c),{},{components:r})):n.createElement(d,s({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},6739:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={id:"read-only-root-filesystem",title:"read-only-root-filesystem"},s="read-only-root-filesystem",i={unversionedId:"mutation-examples/read-only-root-filesystem",id:"mutation-examples/read-only-root-filesystem",title:"read-only-root-filesystem",description:"Usage",source:"@site/docs/mutation-examples/read-only-root-filesystem.md",sourceDirName:"mutation-examples",slug:"/mutation-examples/read-only-root-filesystem",permalink:"/gatekeeper-library/website/mutation-examples/read-only-root-filesystem",draft:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/mutation-examples/read-only-root-filesystem.md",tags:[],version:"current",frontMatter:{id:"read-only-root-filesystem",title:"read-only-root-filesystem"},sidebar:"docs",previous:{title:"capabilities",permalink:"/gatekeeper-library/website/mutation-examples/capabilities"},next:{title:"seccomp",permalink:"/gatekeeper-library/website/mutation-examples/seccomp"}},l={},p=[{value:"Usage",id:"usage",level:3},{value:"Mutation Examples",id:"mutation-examples",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"read-only-root-filesystem"},"read-only-root-filesystem"),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/mutation/pod-security-policy/read-only-root-filesystem/samples/mutation.yaml\n")),(0,o.kt)("h2",{id:"mutation-examples"},"Mutation Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: mutations.gatekeeper.sh/v1\nkind: Assign\nmetadata:\n  name: k8spspreadonlyrootfs\nspec:\n  applyTo:\n  - groups: [""]\n    kinds: ["Pod"]\n    versions: ["v1"]\n  location: "spec.containers[name:*].securityContext.readOnlyRootFilesystem"\n  parameters:\n    pathTests:\n    - subPath: "spec.containers[name:*].securityContext.readOnlyRootFilesystem"\n      condition: MustNotExist\n    assign:\n      value: true\n\n')))}u.isMDXComponent=!0}}]);