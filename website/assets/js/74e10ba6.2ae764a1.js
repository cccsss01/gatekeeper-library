"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1094],{2428:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>i,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var n=a(5893),t=a(1151);const l={id:"storageclass",title:"Storage Class"},r="Storage Class",o={id:"validation/storageclass",title:"Storage Class",description:"Description",source:"@site/docs/validation/storageclass.md",sourceDirName:"validation",slug:"/validation/storageclass",permalink:"/gatekeeper-library/website/validation/storageclass",draft:!1,unlisted:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/validation/storageclass.md",tags:[],version:"current",frontMatter:{id:"storageclass",title:"Storage Class"},sidebar:"docs",previous:{title:"Required Probes",permalink:"/gatekeeper-library/website/validation/requiredprobes"},next:{title:"Unique Ingress Host",permalink:"/gatekeeper-library/website/validation/uniqueingresshost"}},i={},c=[{value:"Description",id:"description",level:2},{value:"Template",id:"template",level:2},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:2}];function m(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.a)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"storage-class",children:"Storage Class"}),"\n",(0,n.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(s.p,{children:"Requires storage classes to be specified when used. Only Gatekeeper 3.9+ and non-ephemeral containers are supported."}),"\n",(0,n.jsx)(s.h2,{id:"template",children:"Template"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8sstorageclass\n  annotations:\n    metadata.gatekeeper.sh/title: "Storage Class"\n    metadata.gatekeeper.sh/version: 1.1.2\n    metadata.gatekeeper.sh/requires-sync-data: |\n      "[\n        [\n          {\n            "groups":["storage.k8s.io"],\n            "versions": ["v1"],\n            "kinds": ["StorageClass"]\n          }\n        ]\n      ]"\n    description: >-\n      Requires storage classes to be specified when used. Only Gatekeeper 3.9+ and non-ephemeral containers are supported.\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sStorageClass\n      validation:\n        openAPIV3Schema:\n          type: object\n          description: >-\n            Requires storage classes to be specified when used.\n          properties:\n            includeStorageClassesInMessage:\n              type: boolean\n              default: true\n            allowedStorageClasses:\n              type: array\n              description: "An optional allow-list of storage classes.  If specified, any storage class not in the `allowedStorageClasses` parameter is disallowed."\n              items:\n                type: string\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8sstorageclass\n\n        is_pvc(obj) {\n          obj.apiVersion == "v1"\n          obj.kind == "PersistentVolumeClaim"\n        }\n\n        is_statefulset(obj) {\n          obj.apiVersion == "apps/v1"\n          obj.kind == "StatefulSet"\n        }\n\n        violation[{"msg": msg}] {\n          not data.inventory.cluster["storage.k8s.io/v1"]["StorageClass"]\n          msg := sprintf("StorageClasses not synced. Gatekeeper may be misconfigured. Please have a cluster-admin consult the documentation.", [])\n        }\n\n        storageclass_allowed(name) {\n          data.inventory.cluster["storage.k8s.io/v1"]["StorageClass"][name]\n          # support both direct use of * and as the default value\n          object.get(input.parameters, "allowedStorageClasses", ["*"])[_] == "*"\n        }\n\n        storageclass_allowed(name) {\n          data.inventory.cluster["storage.k8s.io/v1"]["StorageClass"][name]\n          input.parameters.allowedStorageClasses[_] == name\n        }\n\n        violation[{"msg": pvc_storageclass_badname_msg}] {\n          is_pvc(input.review.object)\n          not storageclass_allowed(input.review.object.spec.storageClassName)\n        }\n        pvc_storageclass_badname_msg := sprintf("pvc did not specify a valid storage class name <%v>. Must be one of [%v]", args) {\n          input.parameters.includeStorageClassesInMessage\n          object.get(input.parameters, "allowedStorageClasses", null) == null\n          args := [\n            input.review.object.spec.storageClassName,\n            concat(", ", [n | data.inventory.cluster["storage.k8s.io/v1"]["StorageClass"][n]])\n          ]\n        } else := sprintf("pvc did not specify an allowed and valid storage class name <%v>. Must be one of [%v]", args) {\n          input.parameters.includeStorageClassesInMessage\n          object.get(input.parameters, "allowedStorageClasses", null) != null\n          sc := {n | data.inventory.cluster["storage.k8s.io/v1"]["StorageClass"][n]} & {x | x = object.get(input.parameters, "allowedStorageClasses", [])[_]}\n          args := [\n            input.review.object.spec.storageClassName,\n            concat(", ", sc)\n          ]\n        } else := sprintf(\n          "pvc did not specify a valid storage class name <%v>.",\n          [input.review.object.spec.storageClassName]\n        )\n\n        violation[{"msg": pvc_storageclass_noname_msg}] {\n          is_pvc(input.review.object)\n          not input.review.object.spec.storageClassName\n        }\n        pvc_storageclass_noname_msg := sprintf("pvc did not specify a storage class name. Must be one of [%v]", args) {\n          input.parameters.includeStorageClassesInMessage\n          args := [\n            concat(", ", [n | data.inventory.cluster["storage.k8s.io/v1"]["StorageClass"][n]])\n          ]\n        } else := sprintf(\n          "pvc did not specify a storage class name.",\n          []\n        )\n\n        violation[{"msg": statefulset_vct_badname_msg(vct)}] {\n          is_statefulset(input.review.object)\n          vct := input.review.object.spec.volumeClaimTemplates[_]\n          not storageclass_allowed(vct.spec.storageClassName)\n        }\n        statefulset_vct_badname_msg(vct) := msg {\n          input.parameters.includeStorageClassesInMessage\n          object.get(input.parameters, "allowedStorageClasses", null) == null\n          msg := sprintf(\n              "statefulset did not specify a valid storage class name <%v>. Must be one of [%v]", [\n              vct.spec.storageClassName,\n              concat(", ", [n | data.inventory.cluster["storage.k8s.io/v1"]["StorageClass"][n]])\n          ])\n        }\n        statefulset_vct_badname_msg(vct) := msg {\n          input.parameters.includeStorageClassesInMessage\n          object.get(input.parameters, "allowedStorageClasses", null) != null\n          sc := {n | data.inventory.cluster["storage.k8s.io/v1"]["StorageClass"][n]} & {x | x = object.get(input.parameters, "allowedStorageClasses", [])[_]}\n          msg := sprintf(\n              "statefulset did not specify an allowed and valid storage class name <%v>. Must be one of [%v]", [\n              vct.spec.storageClassName,\n              concat(", ", sc)\n          ])\n        }\n        statefulset_vct_badname_msg(vct) := msg {\n          not input.parameters.includeStorageClassesInMessage\n          msg := sprintf(\n            "statefulset did not specify a valid storage class name <%v>.", [\n              vct.spec.storageClassName\n          ])\n        }\n\n        violation[{"msg": statefulset_vct_noname_msg}] {\n          is_statefulset(input.review.object)\n          vct := input.review.object.spec.volumeClaimTemplates[_]\n          not vct.spec.storageClassName\n        }\n        statefulset_vct_noname_msg := sprintf("statefulset did not specify a storage class name. Must be one of [%v]", args) {\n          input.parameters.includeStorageClassesInMessage\n          args := [\n            concat(", ", [n | data.inventory.cluster["storage.k8s.io/v1"]["StorageClass"][n]])\n          ]\n        } else := sprintf(\n          "statefulset did not specify a storage class name.",\n          []\n        )\n\n'})}),"\n",(0,n.jsx)(s.h3,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/storageclass/template.yaml\n"})}),"\n",(0,n.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"storageclass"}),(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"constraint"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sStorageClass\nmetadata:\n  name: storageclass\nspec:\n  match:\n    kinds:\n      - apiGroups: [""]\n        kinds: ["PersistentVolumeClaim"]\n      - apiGroups: ["apps"]\n        kinds: ["StatefulSet"]\n  parameters:\n    includeStorageClassesInMessage: true\n\n'})}),(0,n.jsx)(s.p,{children:"Usage"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/storageclass/samples/storageclass/constraint.yaml\n"})})]}),(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"example-allowed-pvc"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: ok\nspec:\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 8Gi\n  storageClassName: somestorageclass\n\n"})}),(0,n.jsx)(s.p,{children:"Usage"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/storageclass/samples/storageclass/example_allowed_pvc.yaml\n"})})]}),(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"example-allowed-ss"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: volumeclaimstorageclass\nspec:\n  selector:\n    matchLabels:\n      app: volumeclaimstorageclass\n  serviceName: volumeclaimstorageclass\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: volumeclaimstorageclass\n    spec:\n      containers:\n      - name: main\n        image: registry.k8s.io/nginx-slim:0.8\n        volumeMounts:\n        - name: data\n          mountPath: /usr/share/nginx/html\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: ["ReadWriteOnce"]\n      storageClassName: "somestorageclass"\n      resources:\n        requests:\n          storage: 1Gi\n\n'})}),(0,n.jsx)(s.p,{children:"Usage"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/storageclass/samples/storageclass/example_allowed_ss.yaml\n"})})]}),(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"example-disallowed-pvc-badname"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: badstorageclass\nspec:\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 8Gi\n  storageClassName: badstorageclass\n\n"})}),(0,n.jsx)(s.p,{children:"Usage"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/storageclass/samples/storageclass/example_disallowed_pvc_badname.yaml\n"})})]}),(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"example-disallowed-ssvct-badnamename"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: badvolumeclaimstorageclass\nspec:\n  selector:\n    matchLabels:\n      app: badvolumeclaimstorageclass\n  serviceName: badvolumeclaimstorageclass\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: badvolumeclaimstorageclass\n    spec:\n      containers:\n      - name: main\n        image: registry.k8s.io/nginx-slim:0.8\n        volumeMounts:\n        - name: data\n          mountPath: /usr/share/nginx/html\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: ["ReadWriteOnce"]\n      storageClassName: "badstorageclass"\n      resources:\n        requests:\n          storage: 1Gi\n\n'})}),(0,n.jsx)(s.p,{children:"Usage"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/storageclass/samples/storageclass/example_disallowed_ssvct_badnamename.yaml\n"})})]}),(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"example-disallowed-pvc-nonamename"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:"---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: nostorageclass\nspec:\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 8Gi\n\n"})}),(0,n.jsx)(s.p,{children:"Usage"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/storageclass/samples/storageclass/example_disallowed_pvc_nonamename.yaml\n"})})]}),(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"example-disallowed-ssvct-nonamename"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: novolumeclaimstorageclass\nspec:\n  selector:\n    matchLabels:\n      app: novolumeclaimstorageclass\n  serviceName: novolumeclaimstorageclass\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: novolumeclaimstorageclass\n    spec:\n      containers:\n      - name: main\n        image: registry.k8s.io/nginx-slim:0.8\n        volumeMounts:\n        - name: data\n          mountPath: /usr/share/nginx/html\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: ["ReadWriteOnce"]\n      resources:\n        requests:\n          storage: 1Gi\n\n'})}),(0,n.jsx)(s.p,{children:"Usage"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/storageclass/samples/storageclass/example_disallowed_ssvct_nonamename.yaml\n"})})]})]}),"\n",(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"storageclass-allowlist"}),(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"constraint"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sStorageClass\nmetadata:\n  name: allowed-storageclass\nspec:\n  match:\n    kinds:\n      - apiGroups: [""]\n        kinds: ["PersistentVolumeClaim"]\n      - apiGroups: ["apps"]\n        kinds: ["StatefulSet"]\n  parameters:\n    includeStorageClassesInMessage: true\n    allowedStorageClasses:\n      - allowed-storage-class\n\n'})}),(0,n.jsx)(s.p,{children:"Usage"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/storageclass/samples/storageclass-allowlist/constraint.yaml\n"})})]}),(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"allowed-storage-class-pvc"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: allowed-storage-class-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 8Gi\n  storageClassName: allowed-storage-class\n\n"})}),(0,n.jsx)(s.p,{children:"Usage"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/storageclass/samples/storageclass-allowlist/example_allowed.yaml\n"})})]}),(0,n.jsxs)(a,{children:[(0,n.jsx)("summary",{children:"disallowed-storage-class-pvc"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: disallowed-storage-class-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 8Gi\n  storageClassName: disallowed-storage-class\n\n"})}),(0,n.jsx)(s.p,{children:"Usage"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/storageclass/samples/storageclass-allowlist/example_disallowed.yaml\n"})})]})]})]})}function p(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},1151:(e,s,a)=>{a.d(s,{Z:()=>o,a:()=>r});var n=a(7294);const t={},l=n.createContext(t);function r(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);