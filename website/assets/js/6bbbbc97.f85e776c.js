"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1263],{5733:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>m,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var s=l(5893),i=l(1151);const t={id:"flexvolume-drivers",title:"FlexVolumes"},r="FlexVolumes",o={id:"validation/flexvolume-drivers",title:"FlexVolumes",description:"Description",source:"@site/docs/validation/flexvolume-drivers.md",sourceDirName:"validation",slug:"/validation/flexvolume-drivers",permalink:"/gatekeeper-library/website/validation/flexvolume-drivers",draft:!1,unlisted:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/validation/flexvolume-drivers.md",tags:[],version:"current",frontMatter:{id:"flexvolume-drivers",title:"FlexVolumes"},sidebar:"docs",previous:{title:"Capabilities",permalink:"/gatekeeper-library/website/validation/capabilities"},next:{title:"Forbidden Sysctls",permalink:"/gatekeeper-library/website/validation/forbidden-sysctls"}},a={},d=[{value:"Description",id:"description",level:2},{value:"Template",id:"template",level:2},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components},{Details:l}=n;return l||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"flexvolumes",children:"FlexVolumes"}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["Controls the allowlist of FlexVolume drivers. Corresponds to the ",(0,s.jsx)(n.code,{children:"allowedFlexVolumes"})," field in PodSecurityPolicy. For more information, see ",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/policy/pod-security-policy/#flexvolume-drivers",children:"https://kubernetes.io/docs/concepts/policy/pod-security-policy/#flexvolume-drivers"})]}),"\n",(0,s.jsx)(n.h2,{id:"template",children:"Template"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8spspflexvolumes\n  annotations:\n    metadata.gatekeeper.sh/title: "FlexVolumes"\n    metadata.gatekeeper.sh/version: 1.0.1\n    description: >-\n      Controls the allowlist of FlexVolume drivers. Corresponds to the\n      `allowedFlexVolumes` field in PodSecurityPolicy. For more information,\n      see\n      https://kubernetes.io/docs/concepts/policy/pod-security-policy/#flexvolume-drivers\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sPSPFlexVolumes\n      validation:\n        # Schema for the `parameters` field\n        openAPIV3Schema:\n          type: object\n          description: >-\n            Controls the allowlist of FlexVolume drivers. Corresponds to the\n            `allowedFlexVolumes` field in PodSecurityPolicy. For more information,\n            see\n            https://kubernetes.io/docs/concepts/policy/pod-security-policy/#flexvolume-drivers\n          properties:\n            allowedFlexVolumes:\n              type: array\n              description: "An array of AllowedFlexVolume objects."\n              items:\n                type: object\n                properties:\n                  driver:\n                    description: "The name of the FlexVolume driver."\n                    type: string\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8spspflexvolumes\n\n        import data.lib.exclude_update.is_update\n\n        violation[{"msg": msg, "details": {}}] {\n            # spec.volumes field is immutable.\n            not is_update(input.review)\n\n            volume := input_flexvolumes[_]\n            not input_flexvolumes_allowed(volume)\n            msg := sprintf("FlexVolume %v is not allowed, pod: %v. Allowed drivers: %v", [volume, input.review.object.metadata.name, input.parameters.allowedFlexVolumes])\n        }\n\n        input_flexvolumes_allowed(volume) {\n            input.parameters.allowedFlexVolumes[_].driver == volume.flexVolume.driver\n        }\n\n        input_flexvolumes[v] {\n            v := input.review.object.spec.volumes[_]\n            has_field(v, "flexVolume")\n        }\n\n        # has_field returns whether an object has a field\n        has_field(object, field) = true {\n            object[field]\n        }\n      libs:\n        - |\n          package lib.exclude_update\n\n          is_update(review) {\n              review.operation == "UPDATE"\n          }\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/flexvolume-drivers/template.yaml\n"})}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(l,{children:[(0,s.jsx)("summary",{children:"flexvolume-drivers"}),(0,s.jsxs)(l,{children:[(0,s.jsx)("summary",{children:"constraint"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sPSPFlexVolumes\nmetadata:\n  name: psp-flexvolume-drivers\nspec:\n  match:\n    kinds:\n      - apiGroups: [""]\n        kinds: ["Pod"]\n  parameters:\n    allowedFlexVolumes: #[]\n    - driver: "example/lvm"\n    - driver: "example/cifs"\n\n'})}),(0,s.jsx)(n.p,{children:"Usage"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/flexvolume-drivers/samples/psp-flexvolume-drivers/constraint.yaml\n"})})]}),(0,s.jsxs)(l,{children:[(0,s.jsx)("summary",{children:"example-allowed"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-flexvolume-driver-allowed\n  labels:\n    app: nginx-flexvolume-driver\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    volumeMounts:\n    - mountPath: /test\n      name: test-volume\n      readOnly: true\n  volumes:\n  - name: test-volume\n    flexVolume:\n      driver: "example/lvm"\n\n'})}),(0,s.jsx)(n.p,{children:"Usage"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/flexvolume-drivers/samples/psp-flexvolume-drivers/example_allowed.yaml\n"})})]}),(0,s.jsxs)(l,{children:[(0,s.jsx)("summary",{children:"example-disallowed"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-flexvolume-driver-disallowed\n  labels:\n    app: nginx-flexvolume-driver\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    volumeMounts:\n    - mountPath: /test\n      name: test-volume\n      readOnly: true\n  volumes:\n  - name: test-volume\n    flexVolume:\n      driver: "example/testdriver" #"example/lvm"\n\n'})}),(0,s.jsx)(n.p,{children:"Usage"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/flexvolume-drivers/samples/psp-flexvolume-drivers/example_disallowed.yaml\n"})})]})]})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},1151:(e,n,l)=>{l.d(n,{Z:()=>o,a:()=>r});var s=l(7294);const i={},t=s.createContext(i);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);