"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5444],{2297:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var o=t(5893),r=t(1151);const a={id:"proc-mount",title:"Proc Mount"},i="Proc Mount",s={id:"validation/proc-mount",title:"Proc Mount",description:"Description",source:"@site/docs/validation/proc-mount.md",sourceDirName:"validation",slug:"/validation/proc-mount",permalink:"/gatekeeper-library/website/validation/proc-mount",draft:!1,unlisted:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/validation/proc-mount.md",tags:[],version:"current",frontMatter:{id:"proc-mount",title:"Proc Mount"},sidebar:"docs",previous:{title:"Privileged Container",permalink:"/gatekeeper-library/website/validation/privileged-containers"},next:{title:"Read Only Root Filesystem",permalink:"/gatekeeper-library/website/validation/read-only-root-filesystem"}},c={},p=[{value:"Description",id:"description",level:2},{value:"Template",id:"template",level:2},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"proc-mount",children:"Proc Mount"}),"\n",(0,o.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,o.jsxs)(n.p,{children:["Controls the allowed ",(0,o.jsx)(n.code,{children:"procMount"})," types for the container. Corresponds to the ",(0,o.jsx)(n.code,{children:"allowedProcMountTypes"})," field in a PodSecurityPolicy. For more information, see ",(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/policy/pod-security-policy/#allowedprocmounttypes",children:"https://kubernetes.io/docs/concepts/policy/pod-security-policy/#allowedprocmounttypes"})]}),"\n",(0,o.jsx)(n.h2,{id:"template",children:"Template"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8spspprocmount\n  annotations:\n    metadata.gatekeeper.sh/title: "Proc Mount"\n    metadata.gatekeeper.sh/version: 1.0.3\n    description: >-\n      Controls the allowed `procMount` types for the container. Corresponds to\n      the `allowedProcMountTypes` field in a PodSecurityPolicy. For more\n      information, see\n      https://kubernetes.io/docs/concepts/policy/pod-security-policy/#allowedprocmounttypes\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sPSPProcMount\n      validation:\n        # Schema for the `parameters` field\n        openAPIV3Schema:\n          type: object\n          description: >-\n            Controls the allowed `procMount` types for the container. Corresponds to\n            the `allowedProcMountTypes` field in a PodSecurityPolicy. For more\n            information, see\n            https://kubernetes.io/docs/concepts/policy/pod-security-policy/#allowedprocmounttypes\n          properties:\n            exemptImages:\n              description: >-\n                Any container that uses an image that matches an entry in this list will be excluded\n                from enforcement. Prefix-matching can be signified with `*`. For example: `my-image-*`.\n\n                It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name)\n                in order to avoid unexpectedly exempting images from an untrusted repository.\n              type: array\n              items:\n                type: string\n            procMount:\n              type: string\n              description: >-\n                Defines the strategy for the security exposure of certain paths\n                in `/proc` by the container runtime. Setting to `Default` uses\n                the runtime defaults, where `Unmasked` bypasses the default\n                behavior.\n              enum:\n                - Default\n                - Unmasked\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8spspprocmount\n\n        import data.lib.exclude_update.is_update\n        import data.lib.exempt_container.is_exempt\n\n        violation[{"msg": msg, "details": {}}] {\n            # spec.containers.securityContext.procMount field is immutable.\n            not is_update(input.review)\n\n            c := input_containers[_]\n            not is_exempt(c)\n            allowedProcMount := get_allowed_proc_mount(input)\n            not input_proc_mount_type_allowed(allowedProcMount, c)\n            msg := sprintf("ProcMount type is not allowed, container: %v. Allowed procMount types: %v", [c.name, allowedProcMount])\n        }\n\n        input_proc_mount_type_allowed(allowedProcMount, c) {\n            allowedProcMount == "default"\n            lower(c.securityContext.procMount) == "default"\n        }\n        input_proc_mount_type_allowed(allowedProcMount, _) {\n            allowedProcMount == "unmasked"\n        }\n\n        input_containers[c] {\n            c := input.review.object.spec.containers[_]\n            c.securityContext.procMount\n        }\n        input_containers[c] {\n            c := input.review.object.spec.initContainers[_]\n            c.securityContext.procMount\n        }\n        input_containers[c] {\n            c := input.review.object.spec.ephemeralContainers[_]\n            c.securityContext.procMount\n        }\n\n        get_allowed_proc_mount(arg) = out {\n            not arg.parameters\n            out = "default"\n        }\n        get_allowed_proc_mount(arg) = out {\n            not arg.parameters.procMount\n            out = "default"\n        }\n        get_allowed_proc_mount(arg) = out {\n            arg.parameters.procMount\n            not valid_proc_mount(arg.parameters.procMount)\n            out = "default"\n        }\n        get_allowed_proc_mount(arg) = out {\n            valid_proc_mount(arg.parameters.procMount)\n            out = lower(arg.parameters.procMount)\n        }\n\n        valid_proc_mount(str) {\n            lower(str) == "default"\n        }\n        valid_proc_mount(str) {\n            lower(str) == "unmasked"\n        }\n      libs:\n        - |\n          package lib.exclude_update\n\n          is_update(review) {\n              review.operation == "UPDATE"\n          }\n        - |\n          package lib.exempt_container\n\n          is_exempt(container) {\n              exempt_images := object.get(object.get(input, "parameters", {}), "exemptImages", [])\n              img := container.image\n              exemption := exempt_images[_]\n              _matches_exemption(img, exemption)\n          }\n\n          _matches_exemption(img, exemption) {\n              not endswith(exemption, "*")\n              exemption == img\n          }\n\n          _matches_exemption(img, exemption) {\n              endswith(exemption, "*")\n              prefix := trim_suffix(exemption, "*")\n              startswith(img, prefix)\n          }\n\n'})}),"\n",(0,o.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/proc-mount/template.yaml\n"})}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"default-proc-mount-required"}),(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"constraint"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sPSPProcMount\nmetadata:\n  name: psp-proc-mount\nspec:\n  match:\n    kinds:\n      - apiGroups: [""]\n        kinds: ["Pod"]\n  parameters:\n    procMount: Default\n\n'})}),(0,o.jsx)(n.p,{children:"Usage"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/proc-mount/samples/psp-proc-mount/constraint.yaml\n"})})]}),(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"example-disallowed"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-proc-mount-disallowed\n  labels:\n    app: nginx-proc-mount\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    securityContext:\n      procMount: Unmasked #Default\n\n"})}),(0,o.jsx)(n.p,{children:"Usage"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/proc-mount/samples/psp-proc-mount/example_disallowed.yaml\n"})})]}),(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"example-allowed"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-proc-mount-disallowed\n  labels:\n    app: nginx-proc-mount\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    securityContext:\n      procMount: Default\n\n"})}),(0,o.jsx)(n.p,{children:"Usage"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/proc-mount/samples/psp-proc-mount/example_allowed.yaml\n"})})]}),(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"disallowed-ephemeral"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-proc-mount-disallowed\n  labels:\n    app: nginx-proc-mount\nspec:\n  ephemeralContainers:\n  - name: nginx\n    image: nginx\n    securityContext:\n      procMount: Unmasked #Default\n\n"})}),(0,o.jsx)(n.p,{children:"Usage"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/proc-mount/samples/psp-proc-mount/disallowed_ephemeral.yaml\n"})})]})]})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>i});var o=t(7294);const r={},a=o.createContext(r);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);