"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6472],{4933:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var r=t(5893),o=t(1151);const s={id:"block-nodeport-services",title:"Block NodePort"},i="Block NodePort",a={id:"validation/block-nodeport-services",title:"Block NodePort",description:"Description",source:"@site/docs/validation/block-nodeport-services.md",sourceDirName:"validation",slug:"/validation/block-nodeport-services",permalink:"/gatekeeper-library/website/validation/block-nodeport-services",draft:!1,unlisted:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/validation/block-nodeport-services.md",tags:[],version:"current",frontMatter:{id:"block-nodeport-services",title:"Block NodePort"},sidebar:"docs",previous:{title:"Block Services with type LoadBalancer",permalink:"/gatekeeper-library/website/validation/block-loadbalancer-services"},next:{title:"Block Wildcard Ingress",permalink:"/gatekeeper-library/website/validation/block-wildcard-ingress"}},l={},c=[{value:"Description",id:"description",level:2},{value:"Template",id:"template",level:2},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"block-nodeport",children:"Block NodePort"}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["Disallows all Services with type NodePort.\n",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/#nodeport",children:"https://kubernetes.io/docs/concepts/services-networking/service/#nodeport"})]}),"\n",(0,r.jsx)(n.h2,{id:"template",children:"Template"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8sblocknodeport\n  annotations:\n    metadata.gatekeeper.sh/title: "Block NodePort"\n    metadata.gatekeeper.sh/version: 1.0.0\n    description: >-\n      Disallows all Services with type NodePort.\n\n      https://kubernetes.io/docs/concepts/services-networking/service/#nodeport\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sBlockNodePort\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8sblocknodeport\n\n        violation[{"msg": msg}] {\n          input.review.kind.kind == "Service"\n          input.review.object.spec.type == "NodePort"\n          msg := "User is not allowed to create service of type NodePort"\n        }\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/block-nodeport-services/template.yaml\n"})}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"block-nodeport-services"}),(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"constraint"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sBlockNodePort\nmetadata:\n  name: block-node-port\nspec:\n  match:\n    kinds:\n      - apiGroups: [""]\n        kinds: ["Service"]\n\n'})}),(0,r.jsx)(n.p,{children:"Usage"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/block-nodeport-services/samples/block-node-port/constraint.yaml\n"})})]}),(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"example-disallowed"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service-disallowed\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n      targetPort: 80\n      nodePort: 30007\n\n"})}),(0,r.jsx)(n.p,{children:"Usage"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/block-nodeport-services/samples/block-node-port/example_disallowed.yaml\n"})})]})]})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var r=t(7294);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);