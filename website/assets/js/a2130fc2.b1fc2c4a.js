"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1459],{87:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=t(5893),o=t(1151);const r={id:"host-network-ports",title:"Host Networking Ports"},i="Host Networking Ports",a={id:"validation/host-network-ports",title:"Host Networking Ports",description:"Description",source:"@site/docs/validation/host-network-ports.md",sourceDirName:"validation",slug:"/validation/host-network-ports",permalink:"/gatekeeper-library/website/validation/host-network-ports",draft:!1,unlisted:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/validation/host-network-ports.md",tags:[],version:"current",frontMatter:{id:"host-network-ports",title:"Host Networking Ports"},sidebar:"docs",previous:{title:"Host Namespace",permalink:"/gatekeeper-library/website/validation/host-namespaces"},next:{title:"Privileged Container",permalink:"/gatekeeper-library/website/validation/privileged-containers"}},p={},c=[{value:"Description",id:"description",level:2},{value:"Template",id:"template",level:2},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"host-networking-ports",children:"Host Networking Ports"}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["Controls usage of host network namespace by pod containers. Specific ports must be specified. Corresponds to the ",(0,s.jsx)(n.code,{children:"hostNetwork"})," and ",(0,s.jsx)(n.code,{children:"hostPorts"})," fields in a PodSecurityPolicy. For more information, see ",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",children:"https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces"})]}),"\n",(0,s.jsx)(n.h2,{id:"template",children:"Template"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8spsphostnetworkingports\n  annotations:\n    metadata.gatekeeper.sh/title: "Host Networking Ports"\n    metadata.gatekeeper.sh/version: 1.0.2\n    description: >-\n      Controls usage of host network namespace by pod containers. Specific\n      ports must be specified. Corresponds to the `hostNetwork` and\n      `hostPorts` fields in a PodSecurityPolicy. For more information, see\n      https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sPSPHostNetworkingPorts\n      validation:\n        # Schema for the `parameters` field\n        openAPIV3Schema:\n          type: object\n          description: >-\n            Controls usage of host network namespace by pod containers. Specific\n            ports must be specified. Corresponds to the `hostNetwork` and\n            `hostPorts` fields in a PodSecurityPolicy. For more information, see\n            https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces\n          properties:\n            exemptImages:\n              description: >-\n                Any container that uses an image that matches an entry in this list will be excluded\n                from enforcement. Prefix-matching can be signified with `*`. For example: `my-image-*`.\n\n                It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name)\n                in order to avoid unexpectedly exempting images from an untrusted repository.\n              type: array\n              items:\n                type: string\n            hostNetwork:\n              description: "Determines if the policy allows the use of HostNetwork in the pod spec."\n              type: boolean\n            min:\n              description: "The start of the allowed port range, inclusive."\n              type: integer\n            max:\n              description: "The end of the allowed port range, inclusive."\n              type: integer\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8spsphostnetworkingports\n\n        import data.lib.exclude_update.is_update\n        import data.lib.exempt_container.is_exempt\n\n        violation[{"msg": msg, "details": {}}] {\n            # spec.hostNetwork field is immutable.\n            not is_update(input.review)\n\n            input_share_hostnetwork(input.review.object)\n            msg := sprintf("The specified hostNetwork and hostPort are not allowed, pod: %v. Allowed values: %v", [input.review.object.metadata.name, input.parameters])\n        }\n\n        input_share_hostnetwork(o) {\n            not input.parameters.hostNetwork\n            o.spec.hostNetwork\n        }\n\n        input_share_hostnetwork(_) {\n            hostPort := input_containers[_].ports[_].hostPort\n            hostPort < input.parameters.min\n        }\n\n        input_share_hostnetwork(_) {\n            hostPort := input_containers[_].ports[_].hostPort\n            hostPort > input.parameters.max\n        }\n\n        input_containers[c] {\n            c := input.review.object.spec.containers[_]\n            not is_exempt(c)\n        }\n\n        input_containers[c] {\n            c := input.review.object.spec.initContainers[_]\n            not is_exempt(c)\n        }\n\n        input_containers[c] {\n            c := input.review.object.spec.ephemeralContainers[_]\n            not is_exempt(c)\n        }\n      libs:\n        - |\n          package lib.exclude_update\n\n          is_update(review) {\n              review.operation == "UPDATE"\n          }\n        - |\n          package lib.exempt_container\n\n          is_exempt(container) {\n              exempt_images := object.get(object.get(input, "parameters", {}), "exemptImages", [])\n              img := container.image\n              exemption := exempt_images[_]\n              _matches_exemption(img, exemption)\n          }\n\n          _matches_exemption(img, exemption) {\n              not endswith(exemption, "*")\n              exemption == img\n          }\n\n          _matches_exemption(img, exemption) {\n              endswith(exemption, "*")\n              prefix := trim_suffix(exemption, "*")\n              startswith(img, prefix)\n          }\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/host-network-ports/template.yaml\n"})}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"use-of-host-networking-ports-blocked"}),(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"constraint"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sPSPHostNetworkingPorts\nmetadata:\n  name: psp-host-network-ports\nspec:\n  match:\n    kinds:\n      - apiGroups: [""]\n        kinds: ["Pod"]\n  parameters:\n    hostNetwork: true\n    min: 80\n    max: 9000\n\n'})}),(0,s.jsx)(n.p,{children:"Usage"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/host-network-ports/samples/psp-host-network-ports/constraint.yaml\n"})})]}),(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"example-disallowed"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-host-networking-ports-disallowed\n  labels:\n    app: nginx-host-networking-ports\nspec:\n  hostNetwork: true\n  containers:\n  - name: nginx\n    image: nginx\n    ports:\n    - containerPort: 9001\n      hostPort: 9001\n\n"})}),(0,s.jsx)(n.p,{children:"Usage"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/host-network-ports/samples/psp-host-network-ports/example_disallowed.yaml\n"})})]}),(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"example-allowed"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-host-networking-ports-allowed\n  labels:\n    app: nginx-host-networking-ports\nspec:\n  hostNetwork: false\n  containers:\n  - name: nginx\n    image: nginx\n    ports:\n    - containerPort: 9000\n      hostPort: 80\n\n"})}),(0,s.jsx)(n.p,{children:"Usage"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/host-network-ports/samples/psp-host-network-ports/example_allowed.yaml\n"})})]}),(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"disallowed-ephemeral"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-host-networking-ports-disallowed\n  labels:\n    app: nginx-host-networking-ports\nspec:\n  hostNetwork: true\n  ephemeralContainers:\n  - name: nginx\n    image: nginx\n    ports:\n    - containerPort: 9001\n      hostPort: 9001\n\n"})}),(0,s.jsx)(n.p,{children:"Usage"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/host-network-ports/samples/psp-host-network-ports/disallowed_ephemeral.yaml\n"})})]})]})]})}function d(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var s=t(7294);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);