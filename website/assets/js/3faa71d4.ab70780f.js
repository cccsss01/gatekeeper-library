"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4129],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=i,g=m["".concat(o,".").concat(u)]||m[u]||d[u]||r;return n?a.createElement(g,l(l({ref:t},c),{},{components:n})):a.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[m]="string"==typeof e?e:i,l[1]=s;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1216:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={id:"disallowinteractive",title:"Disallow Interactive TTY Containers"},l="Disallow Interactive TTY Containers",s={unversionedId:"validation/disallowinteractive",id:"validation/disallowinteractive",title:"Disallow Interactive TTY Containers",description:"Description",source:"@site/docs/validation/disallowinteractive.md",sourceDirName:"validation",slug:"/validation/disallowinteractive",permalink:"/gatekeeper-library/website/validation/disallowinteractive",draft:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/validation/disallowinteractive.md",tags:[],version:"current",frontMatter:{id:"disallowinteractive",title:"Disallow Interactive TTY Containers"},sidebar:"docs",previous:{title:"Disallow tags",permalink:"/gatekeeper-library/website/validation/disallowedtags"},next:{title:"Container ephemeral storage limit",permalink:"/gatekeeper-library/website/validation/ephemeralstoragelimit"}},o={},p=[{value:"Description",id:"description",level:2},{value:"Template",id:"template",level:2},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:2}],c={toc:p},m="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"disallow-interactive-tty-containers"},"Disallow Interactive TTY Containers"),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"Requires that objects have the fields ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.tty")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.stdin")," set to false or unset."),(0,i.kt)("h2",{id:"template"},"Template"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8sdisallowinteractivetty\n  annotations:\n    metadata.gatekeeper.sh/title: "Disallow Interactive TTY Containers"\n    metadata.gatekeeper.sh/version: 1.0.0\n    description: >-\n      Requires that objects have the fields `spec.tty` and `spec.stdin` set to false or unset.\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sDisallowInteractiveTTY\n      validation:\n        # Schema for the `parameters` field\n        openAPIV3Schema:\n          type: object\n          description: >-\n            Controls use of fields related to gaining an interactive session. Corresponds to the `tty` and\n            `stdin` fields in the Pod `spec.containers`, `spec.ephemeralContainers`, and `spec.initContainers`.\n          properties:\n            exemptImages:\n              description: >-\n                Any container that uses an image that matches an entry in this list will be excluded\n                from enforcement. Prefix-matching can be signified with `*`. For example: `my-image-*`.\n\n                It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name)\n                in order to avoid unexpectedly exempting images from an untrusted repository.\n              type: array\n              items:\n                type: string\n  targets:\n  - target: admission.k8s.gatekeeper.sh\n    rego: |\n        package k8sdisallowinteractivetty\n\n        import data.lib.exempt_container.is_exempt\n\n        violation[{"msg": msg, "details": {}}] {\n            c := input_containers[_]\n            not is_exempt(c)\n            input_allow_interactive_fields(c)\n            msg := sprintf("Containers using tty or stdin (%v) are not allowed running image: %v", [c.name, c.image])\n        }\n\n        input_allow_interactive_fields(c) {\n            has_field(c, "stdin")\n            not c.stdin == false\n        }\n        input_allow_interactive_fields(c) {\n            has_field(c, "tty")\n            not c.tty == false\n        }\n        input_containers[c] {\n            c := input.review.object.spec.containers[_]\n        }\n        input_containers[c] {\n            c := input.review.object.spec.ephemeralContainers[_]\n        }\n        input_containers[c] {\n            c := input.review.object.spec.initContainers[_]\n        }\n        # has_field returns whether an object has a field\n        has_field(object, field) = true {\n            object[field]\n        }\n    libs:\n      - |\n        package lib.exempt_container\n\n        is_exempt(container) {\n            exempt_images := object.get(object.get(input, "parameters", {}), "exemptImages", [])\n            img := container.image\n            exemption := exempt_images[_]\n            _matches_exemption(img, exemption)\n        }\n\n        _matches_exemption(img, exemption) {\n            not endswith(exemption, "*")\n            exemption == img\n        }\n\n        _matches_exemption(img, exemption) {\n            endswith(exemption, "*")\n            prefix := trim_suffix(exemption, "*")\n            startswith(img, prefix)\n        }\n\n')),(0,i.kt)("h3",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/disallowinteractive/template.yaml\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"disallow-interactive"),(0,i.kt)("blockquote",null,(0,i.kt)("details",null,(0,i.kt)("summary",null,"constraint"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sDisallowInteractiveTTY\nmetadata:\n  name: no-interactive-tty-containers\nspec:\n  match:\n    kinds:\n      - apiGroups: [""]\n        kinds: ["Pod"]\n\n')),(0,i.kt)("p",null,"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/disallowinteractive/samples/no-interactive-containers/constraint.yaml\n"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"example-allowed"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-interactive-tty-allowed\n  labels:\n    app: nginx-interactive-tty\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    stdin: false\n    tty: false\n\n")),(0,i.kt)("p",null,"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/disallowinteractive/samples/no-interactive-containers/example_allowed.yaml\n"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"example-disallowed"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-privilege-escalation-disallowed\n  labels:\n    app: nginx-privilege-escalation\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    stdin: true\n    tty: true\n\n")),(0,i.kt)("p",null,"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/disallowinteractive/samples/no-interactive-containers/example_disallowed.yaml\n"))))))}d.isMDXComponent=!0}}]);