"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[289],{3167:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=i(5893),n=i(1151);const r={id:"pspintro",title:"Introduction"},d="pod-security-policies",o={id:"pspintro",title:"Introduction",description:"This repo contains common policies needed in Pod Security Policy but implemented as Constraints and Constraint Templates with Gatekeeper.",source:"@site/docs/pspintro.md",sourceDirName:".",slug:"/pspintro",permalink:"/gatekeeper-library/website/pspintro",draft:!1,unlisted:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/pspintro.md",tags:[],version:"current",frontMatter:{id:"pspintro",title:"Introduction"},sidebar:"docs",previous:{title:"Verify deprecated APIs",permalink:"/gatekeeper-library/website/validation/verifydeprecatedapi"},next:{title:"Allow Privilege Escalation in Container",permalink:"/gatekeeper-library/website/validation/allow-privilege-escalation"}},l={},c=[];function a(e){const t={a:"a",code:"code",h1:"h1",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"pod-security-policies",children:"pod-security-policies"}),"\n",(0,s.jsx)(t.p,{children:"This repo contains common policies needed in Pod Security Policy but implemented as Constraints and Constraint Templates with Gatekeeper."}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/policy/pod-security-policy/",children:"Pod Security Policy"})," is a cluster-level resource that controls security\nsensitive aspects of the pod specification. The ",(0,s.jsx)(t.code,{children:"PodSecurityPolicy"})," objects define a set of conditions that a pod must run with in order to be accepted into the system, as well as defaults for the related fields."]}),"\n",(0,s.jsx)(t.p,{children:"An administrator can control the following by setting the field in PSP or by deploying the corresponding Gatekeeper constraint and constraint templates:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Control Aspect"}),(0,s.jsx)(t.th,{children:"Field Names in PSP"}),(0,s.jsx)(t.th,{children:"Gatekeeper Constraint and Constraint Template"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Running of privileged containers"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"privileged"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/privileged-containers",children:"privileged-containers"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Usage of host namespaces"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"hostPID"}),", ",(0,s.jsx)(t.code,{children:"hostIPC"})]}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/host-namespaces",children:"host-namespaces"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Usage of host networking and ports"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"hostNetwork"}),", ",(0,s.jsx)(t.code,{children:"hostPorts"})]}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/host-network-ports",children:"host-network-ports"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Usage of volume types"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"volumes"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/volumes",children:"volumes"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Usage of the host filesystem"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"allowedHostPaths"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/host-filesystem",children:"host-filesystem"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Approved list of flex-volume drivers"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"allowedFlexVolumes"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/flexvolume-drivers",children:"flexvolume-drivers"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Requiring the use of a read only root file system"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"readOnlyRootFilesystem"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/read-only-root-filesystem",children:"read-only-root-filesystem"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"The user and group IDs of the container"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"runAsUser"}),", ",(0,s.jsx)(t.code,{children:"runAsGroup"}),", ",(0,s.jsx)(t.code,{children:"supplementalGroups"}),", ",(0,s.jsx)(t.code,{children:"fsgroup"})]}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/users",children:"users"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Restricting escalation to root privileges"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"allowPrivilegeEscalation"}),", ",(0,s.jsx)(t.code,{children:"defaultAllowPrivilegeEscalation"})]}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/allow-privilege-escalation",children:"allow-privilege-escalation"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Linux capabilities"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"defaultAddCapabilities"}),", ",(0,s.jsx)(t.code,{children:"requiredDropCapabilities"}),", ",(0,s.jsx)(t.code,{children:"allowedCapabilities"})]}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/capabilities",children:"capabilities"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"The SELinux context of the container"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"seLinux"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/selinux",children:"seLinux"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"The allowed Proc mount types for the container"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"allowedProcMountTypes"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/proc-mount",children:"proc-mount"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"The AppArmor profile used by containers"}),(0,s.jsx)(t.td,{children:"annotations"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/apparmor",children:"apparmor"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"The seccomp profile used by containers"}),(0,s.jsx)(t.td,{children:"annotations"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/seccomp",children:"seccomp"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"The sysctl profile used by containers"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"forbiddenSysctls"}),",",(0,s.jsx)(t.code,{children:"allowedUnsafeSysctls"})]}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"validation/forbidden-sysctls",children:"forbidden-sysctls"})})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>o,a:()=>d});var s=i(7294);const n={},r=s.createContext(n);function d(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);